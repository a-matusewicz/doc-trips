# Generated by Django 2.1.5 on 2019-01-25 13:14

from django.db import migrations
from django.utils import timezone
import datetime


def add_submitted_values(apps, schema_editor):

    Volunteer = apps.get_model('applications', 'Volunteer')
    Question = apps.get_model('applications', 'Question')
    TripsYear = apps.get_model('core', 'TripsYear')

    for trips_year in TripsYear.objects.all():
        print(trips_year)
        required_questions = list(Question.objects.filter(trips_year=trips_year, type__in=['LEADER', 'CROO', 'ALL']))

        submitted_at = timezone.make_aware(
            datetime.datetime(month=4, day=1, hour=17, year=trips_year.year),
            datetime.timezone(datetime.timedelta(hours=-5)))

        def required_questions_answered(app, type):
            """
            Returns True if all the required dynamic questions are answered, for
            the given type of question.
            """
            types = ['ALL', type]

            q_ids = set(q.id for q in required_questions if q.type in types)

            for answer in app.answer_set.all():
                if answer.answer:  # "" is not an answer
                    try:
                        q_ids.remove(answer.question_id)
                    except KeyError:
                        pass

            return len(q_ids) == 0

        for application in Volunteer.objects.filter(trips_year=trips_year):
            print(application)
            if ((required_questions_answered(application, 'LEADER') and application.leader_willing) or
                (required_questions_answered(application, 'CROO') and application.croo_willing)):
                print(submitted_at)
                application.submitted = submitted_at
                application.save()

class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0123_auto_20190124_2150'),
    ]

    operations = [
        migrations.RunPython(add_submitted_values)
    ]
