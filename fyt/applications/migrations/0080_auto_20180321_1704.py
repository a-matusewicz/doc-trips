# Generated by Django 2.0.2 on 2018-03-21 21:04

from django.db import migrations

"""
Normalize score comments.

In 2017, hard-coded comment fields were added to Score at the last
minute. This migrates the data to a dynamic AnswerComment through
model.
"""

TARGET_YEAR = 2017

def normalize_score_comments(apps, schema_editor):
    AnswerComment = apps.get_model('applications', 'AnswerComment')
    Score = apps.get_model('applications', 'Score')

    for score in Score.objects.filter(trips_year=TARGET_YEAR).select_related(
            'application').prefetch_related('application__answer_set'):

        def answer(i):
            return score.application.answer_set.all()[i-1]

        def create(score, answer, comment):
            AnswerComment.objects.create(
                score=score, answer=answer, comment=comment)

        create(score, answer(1), score.question1)
        create(score, answer(2), score.question2)
        create(score, answer(3), score.question3)
        create(score, answer(4), score.question4)
        create(score, answer(5), score.question5)
        create(score, answer(6), score.question6)


class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0079_auto_20180321_1320'),
    ]

    operations = [
        migrations.RunPython(normalize_score_comments)
    ]
